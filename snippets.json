{
    "WorkflowWithConfig": {
        "prefix": "workflowwithconfig",
        "body": [
            "from artificial.workflows.decorators import config_type, field, parameter, workflow",
            "from artificial.workflows.util import get_workflow_config",
            "from dataclasses import dataclass",
            "",
            "",
            "@dataclass",
            "@field('${5:int_field}', config={'uiTitle': '${6:Field Name}'})",
            "class WorkflowConfigType:",
            "\t${5:int_field}:int",
            "",
            "@parameter('${7:param_name}', {'required': True, 'uiTitle': '${8:Display Name}'})",
            "@workflow(\"${1:wf_name}\", \"${2:wf_id}\", \"${3:lab_id}\")",
            "@config_type(WorkflowConfigType)",
            "async def ${4:wf_func_name}(${7:param_name}: int) -> None:",
            "\tjob_config_ref: WorkflowConfigType = get_workflow_config()"
        ],
        "description": "Workflow with configuration"
    },
    "Workflow": {
        "prefix": "workflow",
        "body": [
            "from artificial.workflows.decorators import parameter, workflow",
            "",
            "",
            "@workflow(\"${1:wf_name}\", \"${2:wf_id}\")",
            "@parameter('${3:param_name}', {'required': True, 'uiTitle': '${4:Display Name}'})",
            "async def ${2:wf_id}(${3:param_name}: int) -> None:",
            "\t${5:pass}"
        ],
        "description": "Workflow"
    },
    "Parameter": {
        "prefix": "parameter",
        "body": [
            "@parameter('${1:param_name}', {'required': True, 'uiTitle': '${2:Display Name}'})"
        ],
        "description": "Request UI Parameter"
    },
    "Action Module": {
        "prefix": "action_module",
        "body": [
            "from artificial.adapter_common import ActionExecutionContext, ActionModule, action",
            "from artificial.logging import get_logger",
            "",
            "logger = get_logger(__name__)",
            "",
            "",
            "class ${1:ActionModuleName}(ActionModule):",
            "\tdef __init__(self) -> None:",
            "\t\tsuper().__init__()",
            "",
            "\t@action('${2:Action Display Name}', ability_name='${3:ability_name}')",
            "\tasync def ${4:action_name}(self, actx: ActionExecutionContext) -> None:",
            "\t\t${5:pass}",
            ""
        ],
        "description": "Action Module"
    },
    "Action": {
        "prefix": "action",
        "body": [
            "\t@action('${1:Action Display Name}', ability_name='${2:ability_name}')",
            "\tasync def ${3:action_name}(self, actx: ActionExecutionContext) -> None:",
            "\t\t${4:pass}",
            ""
        ],
        "description": "Action"
    }
}